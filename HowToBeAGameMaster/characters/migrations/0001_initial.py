# Generated by Django 2.2.7 on 2019-12-10 22:13

import characters.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('items', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('age', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('gender', models.CharField(choices=[('M', 'male'), ('F', 'female'), ('O', 'other')], max_length=1)),
                ('appearance', models.CharField(default='', max_length=500)),
                ('religion', models.CharField(default='', max_length=100)),
                ('profession', models.CharField(default='', max_length=100)),
                ('marital_status', models.CharField(choices=[('single', 'single'), ('relationship', 'relationship'), ('married', 'married'), ('divorced', 'divorced'), ('widowed', 'widowed')], max_length=15)),
                ('player_notes', models.TextField(blank=True, default='', max_length=2000)),
                ('game_master_notes', models.TextField(blank=True, default='', max_length=2000)),
                ('portrait', models.ImageField(blank=True, upload_to='')),
                ('kind', models.CharField(choices=[('PC', 'player character'), ('NPC', 'non-player character')], max_length=3)),
                ('talent_act', models.PositiveSmallIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('talent_knowledge', models.PositiveSmallIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('talent_social', models.PositiveSmallIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('life_points', models.PositiveSmallIntegerField(default=100, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('rescue_points', models.PositiveSmallIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('money', models.PositiveIntegerField(blank=True, default=0)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('bin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='items.Bin')),
                ('character', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='characters.Character')),
            ],
            options={
                'verbose_name_plural': 'Inventories',
            },
            bases=('items.bin',),
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('talent', models.CharField(choices=[('act', 'act'), ('knowledge', 'knowledge'), ('social', 'social')], max_length=10)),
                ('value', characters.fields.SkillValueField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='characters.Character')),
            ],
        ),
    ]
